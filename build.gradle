plugins {
	id 'java'
	id 'org.springframework.boot' version '3.1.5'
	id 'io.spring.dependency-management' version '1.1.3'
}

group = 'com.advertisement'
version = '1.0.0'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	// Spring Boot Web
	implementation 'org.springframework.boot:spring-boot-starter-web'

	// Validation
	implementation 'org.springframework.boot:spring-boot-starter-validation'

	// Spring Security
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'io.jsonwebtoken:jjwt:0.9.1'

	// DataBase
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	runtimeOnly 'org.postgresql:postgresql'
	implementation 'org.liquibase:liquibase-core'

	// OpenApi
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0'

	// Lombok and MapStruct
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	implementation 'org.mapstruct:mapstruct:1.5.3.Final'
	annotationProcessor 'org.projectlombok:lombok-mapstruct-binding:0.1.0'
	annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.3.Final'

	// Testing
	testImplementation 'org.projectlombok:lombok'
	testAnnotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.testcontainers:postgresql:1.19.1'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.named('compileJava') {
	options.compilerArgs = [
			'-Amapstruct.defaultComponentModel=spring',
			'-parameters'
	]
}

tasks.named('test') {
	useJUnitPlatform()
}
